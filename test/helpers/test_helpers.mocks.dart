// Mocks generated by Mockito 5.4.1 from annotations
// in plansteria/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i11;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_storage/firebase_storage.dart' as _i6;
import 'package:flutter/material.dart' as _i10;
import 'package:geocoding/geocoding.dart' as _i8;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i7;
import 'package:image_picker/image_picker.dart' as _i21;
import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i16;
import 'package:mockito/mockito.dart' as _i1;
import 'package:plansteria/core/errors/auth_error.dart' as _i13;
import 'package:plansteria/core/errors/chat_error.dart' as _i24;
import 'package:plansteria/core/errors/event_error.dart' as _i19;
import 'package:plansteria/models/chat.dart' as _i23;
import 'package:plansteria/models/chat_response.dart' as _i25;
import 'package:plansteria/models/event.dart' as _i5;
import 'package:plansteria/models/message.dart' as _i26;
import 'package:plansteria/models/place.dart' as _i30;
import 'package:plansteria/models/place_suggestion.dart' as _i31;
import 'package:plansteria/models/user.dart' as _i3;
import 'package:plansteria/services/auth_service.dart' as _i12;
import 'package:plansteria/services/chat_service.dart' as _i22;
import 'package:plansteria/services/event_service.dart' as _i18;
import 'package:plansteria/services/location_service.dart' as _i29;
import 'package:plansteria/services/media_service.dart' as _i20;
import 'package:plansteria/services/network_service.dart' as _i15;
import 'package:plansteria/services/open_mail_app_service.dart' as _i17;
import 'package:plansteria/services/profile_service.dart' as _i28;
import 'package:plansteria/services/secure_storage_service.dart' as _i14;
import 'package:plansteria/services/shared_preferences_service.dart' as _i27;
import 'package:stacked_services/stacked_services.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOption_0<A> extends _i1.SmartFake implements _i2.Option<A> {
  _FakeOption_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_2 extends _i1.SmartFake implements _i3.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamSubscription_3<T> extends _i1.SmartFake
    implements _i4.StreamSubscription<T> {
  _FakeStreamSubscription_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_4 extends _i1.SmartFake implements _i5.Event {
  _FakeEvent_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReference_5 extends _i1.SmartFake implements _i6.Reference {
  _FakeReference_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_6 extends _i1.SmartFake implements _i7.LatLng {
  _FakeLatLng_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlacemark_7 extends _i1.SmartFake implements _i8.Placemark {
  _FakePlacemark_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i9.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i10.GlobalKey<_i10.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i10.GlobalKey<_i10.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i9.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<T?>? navigateWithTransition<T>(
    _i10.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i10.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i9.Transition? transitionClass,
    _i9.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? replaceWithTransition<T>(
    _i10.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i10.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i9.Transition? transitionClass,
    _i9.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i10.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i10.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? navigateToView<T>(
    _i10.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i10.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i9.Transition? transition,
    _i9.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i10.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? clearStackAndShowView<T>(
    _i10.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? clearTillFirstAndShowView<T>(
    _i10.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
  @override
  _i4.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i10.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i4.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i9.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i9.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i9.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i4.Future<_i9.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i4.Future<_i9.SheetResponse<dynamic>?>.value(),
      ) as _i4.Future<_i9.SheetResponse<dynamic>?>);
  @override
  _i4.Future<_i9.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i11.Color? barrierColor = const _i11.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i4.Future<_i9.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i4.Future<_i9.SheetResponse<T>?>.value(),
      ) as _i4.Future<_i9.SheetResponse<T>?>);
  @override
  void completeSheet(_i9.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i9.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i9.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i10.Widget Function(
      _i10.BuildContext,
      _i9.DialogRequest<dynamic>,
      dynamic Function(_i9.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i9.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i11.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i11.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i9.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i4.Future<_i9.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i4.Future<_i9.DialogResponse<dynamic>?>.value(),
      ) as _i4.Future<_i9.DialogResponse<dynamic>?>);
  @override
  _i4.Future<_i9.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i11.Color? barrierColor = const _i11.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i4.Future<_i9.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i4.Future<_i9.DialogResponse<T>?>.value(),
      ) as _i4.Future<_i9.DialogResponse<T>?>);
  @override
  _i4.Future<_i9.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i11.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i11.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i9.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i4.Future<_i9.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i4.Future<_i9.DialogResponse<dynamic>?>.value(),
      ) as _i4.Future<_i9.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i9.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i12.AuthService {
  @override
  bool get isAuthenticated => (super.noSuchMethod(
        Invocation.getter(#isAuthenticated),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i4.Future<void> checkAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #checkAuthenticated,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.Option<_i2.Either<_i13.AuthError, bool>>>
      checkEmailVerified() => (super.noSuchMethod(
            Invocation.method(
              #checkEmailVerified,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Option<_i2.Either<_i13.AuthError, bool>>>.value(
                    _FakeOption_0<_i2.Either<_i13.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i4.Future<_i2.Option<_i2.Either<_i13.AuthError, bool>>>.value(
                    _FakeOption_0<_i2.Either<_i13.AuthError, bool>>(
              this,
              Invocation.method(
                #checkEmailVerified,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Option<_i2.Either<_i13.AuthError, bool>>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> deleteAccount() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccount,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> deleteAccountEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccountEvents,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccountEvents,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteAccountEvents,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> deleteProfileImage() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteProfileImage,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteProfileImage,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> forgotPassword(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgotPassword,
          [email],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #forgotPassword,
            [email],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<void> getAuthUser() => (super.noSuchMethod(
        Invocation.method(
          #getAuthUser,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i3.User> getUserById(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [userId],
        ),
        returnValue: _i4.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserById,
            [userId],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserById,
            [userId],
          ),
        )),
      ) as _i4.Future<_i3.User>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> googleLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #googleLogin,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #login,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> reauthenticate(
          String? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #reauthenticate,
          [password],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #reauthenticate,
            [password],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> register({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #name: name,
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #register,
            [],
            {
              #name: name,
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> sendPasswordResetEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendPasswordResetEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendPasswordResetEmail,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> sendVerificationEmail() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVerificationEmail,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #sendVerificationEmail,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> updateEmailAddress(
          String? newEmail) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEmailAddress,
          [newEmail],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmailAddress,
            [newEmail],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEmailAddress,
            [newEmail],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
<<<<<<< HEAD
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> updatePassword(
=======
  _i4.Future<_i3.Either<_i11.AuthError, _i3.Unit>> updatePassword(
>>>>>>> ddc3022c4ba3d9ccd545646bfa82bb7d8cbc3b1c
          String? newPassword) =>
      (super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [newPassword],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [newPassword],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updatePassword,
            [newPassword],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>> updateProfile(_i3.User? u) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [u],
        ),
        returnValue: _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
            _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateProfile,
            [u],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>.value(
                _FakeEither_1<_i13.AuthError, _i2.Unit>(
          this,
          Invocation.method(
            #updateProfile,
            [u],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i13.AuthError, _i2.Unit>>);
  @override
  _i4.Stream<_i3.User> userByIdStream(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #userByIdStream,
          [userId],
        ),
        returnValue: _i4.Stream<_i3.User>.empty(),
        returnValueForMissingStub: _i4.Stream<_i3.User>.empty(),
      ) as _i4.Stream<_i3.User>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i14.SecureStorageService {
  @override
  _i4.Future<void> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<String?> read(String? key) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValue: _i4.Future<String?>.value(),
        returnValueForMissingStub: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<void> write({
    required String? key,
    required String? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i15.NetworkService {
  @override
  _i15.NetworkStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _i15.NetworkStatus.connected,
        returnValueForMissingStub: _i15.NetworkStatus.connected,
      ) as _i15.NetworkStatus);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
<<<<<<< HEAD
  _i4.Future<void> checkConnectivity() => (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.StreamSubscription<_i16.InternetConnectionStatus> listenForChange() =>
=======
  _i4.StreamSubscription<_i14.InternetConnectionStatus> listenForChange() =>
>>>>>>> ddc3022c4ba3d9ccd545646bfa82bb7d8cbc3b1c
      (super.noSuchMethod(
        Invocation.method(
          #listenForChange,
          [],
        ),
        returnValue: _FakeStreamSubscription_3<_i16.InternetConnectionStatus>(
          this,
          Invocation.method(
            #listenForChange,
            [],
          ),
        ),
        returnValueForMissingStub:
            _FakeStreamSubscription_3<_i16.InternetConnectionStatus>(
          this,
          Invocation.method(
            #listenForChange,
            [],
          ),
        ),
      ) as _i4.StreamSubscription<_i16.InternetConnectionStatus>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OpenMailAppService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenMailAppService extends _i1.Mock
    implements _i17.OpenMailAppService {
  @override
  _i4.Future<void> openMailApp() => (super.noSuchMethod(
        Invocation.method(
          #openMailApp,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [EventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventService extends _i1.Mock implements _i18.EventService {
  @override
  List<_i5.Event?> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: <_i5.Event?>[],
        returnValueForMissingStub: <_i5.Event?>[],
      ) as List<_i5.Event?>);
  @override
  _i4.Stream<List<_i5.Event?>> get upcomingEventsStream => (super.noSuchMethod(
        Invocation.getter(#upcomingEventsStream),
        returnValue: _i4.Stream<List<_i5.Event?>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<_i5.Event?>>.empty(),
      ) as _i4.Stream<List<_i5.Event?>>);
  @override
  _i4.Stream<List<_i5.Event?>> get eventsByUsersFollowingStream =>
      (super.noSuchMethod(
        Invocation.getter(#eventsByUsersFollowingStream),
        returnValue: _i4.Stream<List<_i5.Event?>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<_i5.Event?>>.empty(),
      ) as _i4.Stream<List<_i5.Event?>>);
  @override
  _i4.Stream<_i5.Event?> get featuredEventStream => (super.noSuchMethod(
        Invocation.getter(#featuredEventStream),
        returnValue: _i4.Stream<_i5.Event?>.empty(),
        returnValueForMissingStub: _i4.Stream<_i5.Event?>.empty(),
      ) as _i4.Stream<_i5.Event?>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i4.Stream<int> numberOfAllCreatedEvents(String? creatorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #numberOfAllCreatedEvents,
          [creatorId],
        ),
        returnValue: _i4.Stream<int>.empty(),
        returnValueForMissingStub: _i4.Stream<int>.empty(),
      ) as _i4.Stream<int>);
  @override
  _i4.Stream<List<_i5.Guest?>> guestsStream(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #guestsStream,
          [eventId],
        ),
        returnValue: _i4.Stream<List<_i5.Guest?>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<_i5.Guest?>>.empty(),
      ) as _i4.Stream<List<_i5.Guest?>>);
  @override
  _i4.Future<List<_i5.Guest?>> getAllGuests(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllGuests,
          [eventId],
        ),
        returnValue: _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
      ) as _i4.Future<List<_i5.Guest?>>);
  @override
  _i4.Stream<int> numberOfGuestsStream(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #numberOfGuestsStream,
          [eventId],
        ),
        returnValue: _i4.Stream<int>.empty(),
        returnValueForMissingStub: _i4.Stream<int>.empty(),
      ) as _i4.Stream<int>);
  @override
  _i4.Stream<_i5.Event> eventStream(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #eventStream,
          [eventId],
        ),
        returnValue: _i4.Stream<_i5.Event>.empty(),
        returnValueForMissingStub: _i4.Stream<_i5.Event>.empty(),
      ) as _i4.Stream<_i5.Event>);
  @override
  _i4.Stream<bool> isAttendingStream(
    String? eventId,
    String? guestId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isAttendingStream,
          [
            eventId,
            guestId,
          ],
        ),
        returnValue: _i4.Stream<bool>.empty(),
        returnValueForMissingStub: _i4.Stream<bool>.empty(),
      ) as _i4.Stream<bool>);
  @override
  _i4.Stream<List<_i5.Event?>> myEventsStream(String? creatorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #myEventsStream,
          [creatorId],
        ),
        returnValue: _i4.Stream<List<_i5.Event?>>.empty(),
        returnValueForMissingStub: _i4.Stream<List<_i5.Event?>>.empty(),
      ) as _i4.Stream<List<_i5.Event?>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> addGuest(
    String? eventId,
    _i5.Guest? guest,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGuest,
          [
            eventId,
            guest,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #addGuest,
            [
              eventId,
              guest,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #addGuest,
            [
              eventId,
              guest,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> removeGuest(
    String? eventId,
    String? guestId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeGuest,
          [
            eventId,
            guestId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #removeGuest,
            [
              eventId,
              guestId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #removeGuest,
            [
              eventId,
              guestId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  _i4.Future<List<_i5.Guest?>> allGuests(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #allGuests,
          [eventId],
        ),
        returnValue: _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
      ) as _i4.Future<List<_i5.Guest?>>);
  @override
  _i4.Future<int> getNumberOfGuests(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #getNumberOfGuests,
          [eventId],
        ),
        returnValue: _i4.Future<int>.value(0),
        returnValueForMissingStub: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> createEvent(
          _i5.Event? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [event],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #createEvent,
            [event],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #createEvent,
            [event],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> deleteEvent(
          String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteEvent,
            [eventId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #deleteEvent,
            [eventId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, List<_i5.Event?>>> getAllEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllEvents,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i19.EventError, List<_i5.Event?>>>.value(
                _FakeEither_1<_i19.EventError, List<_i5.Event?>>(
          this,
          Invocation.method(
            #getAllEvents,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, List<_i5.Event?>>>.value(
                _FakeEither_1<_i19.EventError, List<_i5.Event?>>(
          this,
          Invocation.method(
            #getAllEvents,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, List<_i5.Event?>>>);
  @override
  _i4.Future<_i5.Event> getEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #getEvent,
          [eventId],
        ),
        returnValue: _i4.Future<_i5.Event>.value(_FakeEvent_4(
          this,
          Invocation.method(
            #getEvent,
            [eventId],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i5.Event>.value(_FakeEvent_4(
          this,
          Invocation.method(
            #getEvent,
            [eventId],
          ),
        )),
      ) as _i4.Future<_i5.Event>);
  @override
  _i4.Future<List<_i5.Event?>> getEvents() => (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Event?>>.value(<_i5.Event?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Event?>>.value(<_i5.Event?>[]),
      ) as _i4.Future<List<_i5.Event?>>);
  @override
  _i4.Future<List<_i5.Guest?>> getEventGuests(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventGuests,
          [eventId],
        ),
        returnValue: _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Guest?>>.value(<_i5.Guest?>[]),
      ) as _i4.Future<List<_i5.Guest?>>);
  @override
  _i4.Future<bool> isAttending(
    String? eventId,
    String? guestId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isAttending,
          [
            eventId,
            guestId,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<_i5.Event> getFeaturedEvent() => (super.noSuchMethod(
        Invocation.method(
          #getFeaturedEvent,
          [],
        ),
        returnValue: _i4.Future<_i5.Event>.value(_FakeEvent_4(
          this,
          Invocation.method(
            #getFeaturedEvent,
            [],
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i5.Event>.value(_FakeEvent_4(
          this,
          Invocation.method(
            #getFeaturedEvent,
            [],
          ),
        )),
      ) as _i4.Future<_i5.Event>);
  @override
  _i4.Future<List<_i5.Event?>> getMyEvents(String? creatorId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyEvents,
          [creatorId],
        ),
        returnValue: _i4.Future<List<_i5.Event?>>.value(<_i5.Event?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.Event?>>.value(<_i5.Event?>[]),
      ) as _i4.Future<List<_i5.Event?>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> removeEvent(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeEvent,
          [uid],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #removeEvent,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #removeEvent,
            [uid],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>> updateEvent(
          _i5.Event? event) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEvent,
          [event],
        ),
        returnValue: _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
            _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEvent,
            [event],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>.value(
                _FakeEither_1<_i19.EventError, _i2.Unit>(
          this,
          Invocation.method(
            #updateEvent,
            [event],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i19.EventError, _i2.Unit>>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MediaService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMediaService extends _i1.Mock implements _i20.MediaService {
  @override
  _i6.Reference get storageRef => (super.noSuchMethod(
        Invocation.getter(#storageRef),
        returnValue: _FakeReference_5(
          this,
          Invocation.getter(#storageRef),
        ),
        returnValueForMissingStub: _FakeReference_5(
          this,
          Invocation.getter(#storageRef),
        ),
      ) as _i6.Reference);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  dynamic getFileFromCloud(_i6.Reference? ref) => super.noSuchMethod(
        Invocation.method(
          #getFileFromCloud,
          [ref],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i21.XFile?> getImage({required bool? fromGallery}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [],
          {#fromGallery: fromGallery},
        ),
        returnValue: _i4.Future<_i21.XFile?>.value(),
        returnValueForMissingStub: _i4.Future<_i21.XFile?>.value(),
      ) as _i4.Future<_i21.XFile?>);
  @override
  _i4.Future<List<_i21.XFile>?> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue: _i4.Future<List<_i21.XFile>?>.value(),
        returnValueForMissingStub: _i4.Future<List<_i21.XFile>?>.value(),
      ) as _i4.Future<List<_i21.XFile>?>);
  @override
  _i4.Future<List<_i21.XFile>?> getMultiImages() => (super.noSuchMethod(
        Invocation.method(
          #getMultiImages,
          [],
        ),
        returnValue: _i4.Future<List<_i21.XFile>?>.value(),
        returnValueForMissingStub: _i4.Future<List<_i21.XFile>?>.value(),
      ) as _i4.Future<List<_i21.XFile>?>);
  @override
  dynamic uploadFileToCloud(
    String? path,
    String? name,
    _i6.Reference? ref,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #uploadFileToCloud,
          [
            path,
            name,
            ref,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatService extends _i1.Mock implements _i22.ChatService {
  @override
  List<_i23.Chat?> get chats => (super.noSuchMethod(
        Invocation.getter(#chats),
        returnValue: <_i23.Chat?>[],
        returnValueForMissingStub: <_i23.Chat?>[],
      ) as List<_i23.Chat?>);
  @override
  Map<String, List<_i23.Chat?>> get chatGroups => (super.noSuchMethod(
        Invocation.getter(#chatGroups),
        returnValue: <String, List<_i23.Chat?>>{},
        returnValueForMissingStub: <String, List<_i23.Chat?>>{},
      ) as Map<String, List<_i23.Chat?>>);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i4.Future<void> clearChatHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearChatHistory,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void addChat(_i23.Chat? c) => super.noSuchMethod(
        Invocation.method(
          #addChat,
          [c],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i2.Either<_i24.ChatError, _i25.ChatResponse>> sendMessage(
          _i26.Message? message) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i24.ChatError, _i25.ChatResponse>>.value(
                _FakeEither_1<_i24.ChatError, _i25.ChatResponse>(
          this,
          Invocation.method(
            #sendMessage,
            [message],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i24.ChatError, _i25.ChatResponse>>.value(
                _FakeEither_1<_i24.ChatError, _i25.ChatResponse>(
          this,
          Invocation.method(
            #sendMessage,
            [message],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i24.ChatError, _i25.ChatResponse>>);
  @override
  _i4.Future<void> loadChatHistory() => (super.noSuchMethod(
        Invocation.method(
          #loadChatHistory,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void groupByDate() => super.noSuchMethod(
        Invocation.method(
          #groupByDate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesService extends _i1.Mock
    implements _i27.SharedPreferencesService {
  @override
  bool get isInitialStartup => (super.noSuchMethod(
        Invocation.getter(#isInitialStartup),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i4.Future<dynamic> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  bool hasKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  dynamic read(String? key) => super.noSuchMethod(
        Invocation.method(
          #read,
          [key],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic readList(String? key) => super.noSuchMethod(
        Invocation.method(
          #readList,
          [key],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<dynamic> write({
    required String? key,
    required dynamic value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> writeList({
    required String? key,
    required List<String>? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeList,
          [],
          {
            #key: key,
            #value: value,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
        returnValueForMissingStub: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [ProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileService extends _i1.Mock implements _i28.ProfileService {
  @override
  _i4.Stream<int> followers(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #followers,
          [userId],
        ),
        returnValue: _i4.Stream<int>.empty(),
        returnValueForMissingStub: _i4.Stream<int>.empty(),
      ) as _i4.Stream<int>);
  @override
  _i4.Stream<int> following(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #following,
          [userId],
        ),
        returnValue: _i4.Stream<int>.empty(),
        returnValueForMissingStub: _i4.Stream<int>.empty(),
      ) as _i4.Stream<int>);
  @override
  _i4.Future<void> follow(
    _i3.User? user,
    _i3.User? userToFollow,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #follow,
          [
            user,
            userToFollow,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> unFollow(
    _i3.User? user,
    _i3.User? userToUnFollow,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unFollow,
          [
            user,
            userToUnFollow,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i3.User?>> getAllFollowing(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFollowing,
          [userId],
        ),
        returnValue: _i4.Future<List<_i3.User?>>.value(<_i3.User?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i3.User?>>.value(<_i3.User?>[]),
      ) as _i4.Future<List<_i3.User?>>);
  @override
  _i4.Future<List<_i3.User?>> getAllFollowers(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFollowers,
          [userId],
        ),
        returnValue: _i4.Future<List<_i3.User?>>.value(<_i3.User?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i3.User?>>.value(<_i3.User?>[]),
      ) as _i4.Future<List<_i3.User?>>);
  @override
  _i4.Stream<bool> isFollowing(
    String? userId,
    String? userIdToCheck,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #isFollowing,
          [
            userId,
            userIdToCheck,
          ],
        ),
        returnValue: _i4.Stream<bool>.empty(),
        returnValueForMissingStub: _i4.Stream<bool>.empty(),
      ) as _i4.Stream<bool>);
  @override
  _i4.Future<void> callPhoneNumber(String? phone) => (super.noSuchMethod(
        Invocation.method(
          #callPhoneNumber,
          [phone],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> sendMail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendMail,
          [email],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [LocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationService extends _i1.Mock implements _i29.LocationService {
  @override
  _i7.LatLng get currentGeo => (super.noSuchMethod(
        Invocation.getter(#currentGeo),
        returnValue: _FakeLatLng_6(
          this,
          Invocation.getter(#currentGeo),
        ),
        returnValueForMissingStub: _FakeLatLng_6(
          this,
          Invocation.getter(#currentGeo),
        ),
      ) as _i7.LatLng);
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i4.Future<void> determinePosition() => (super.noSuchMethod(
        Invocation.method(
          #determinePosition,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i8.Placemark> getLocationDetails(_i7.LatLng? geoPoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocationDetails,
          [geoPoint],
        ),
        returnValue: _i4.Future<_i8.Placemark>.value(_FakePlacemark_7(
          this,
          Invocation.method(
            #getLocationDetails,
            [geoPoint],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i8.Placemark>.value(_FakePlacemark_7(
          this,
          Invocation.method(
            #getLocationDetails,
            [geoPoint],
          ),
        )),
      ) as _i4.Future<_i8.Placemark>);
  @override
  void updatePlace(_i30.Place? place) => super.noSuchMethod(
        Invocation.method(
          #updatePlace,
          [place],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> getPlace(String? placeId) => (super.noSuchMethod(
        Invocation.method(
          #getPlace,
          [placeId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<List<_i31.PlaceSuggestion?>> autoComplete(String? input) =>
      (super.noSuchMethod(
        Invocation.method(
          #autoComplete,
          [input],
        ),
        returnValue: _i4.Future<List<_i31.PlaceSuggestion?>>.value(
            <_i31.PlaceSuggestion?>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i31.PlaceSuggestion?>>.value(
                <_i31.PlaceSuggestion?>[]),
      ) as _i4.Future<List<_i31.PlaceSuggestion?>>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
